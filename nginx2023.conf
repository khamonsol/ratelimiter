events {
    worker_connections 1024;
}
http {
    # Define limit zones - These limit the connection interval e.g. 100ms between requests 
    limit_conn_zone $binary_remote_addr zone=fakestore_conn_limit:1m;
    limit_conn_zone $binary_remote_addr zone=icanhazip_conn_limit:1m;
    limit_conn_zone $binary_remote_addr zone=local_conn_limit:1m;

    limit_req_zone $binary_remote_addr zone=fakestore_req_limit:1m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=icanhazip_req_limit:1m rate=4r/s;
    limit_req_zone $binary_remote_addr zone=local_req_limit:1m rate=4r/s;

    server {
        listen 8111;

        # Limit number of concurrent connections for fakestoreapi.com
        limit_conn fakestore_conn_limit 1;

        # Allow connections to be made no more frequently than every 100 ms for fakestoreapi.com
        limit_req zone=fakestore_req_limit burst=1 nodelay;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_verify_client off;
        #proxy_set_header Host localhost;
	proxy_ssl_server_name on;
        ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass https://fakestoreapi.com;
        }
    }

    server {
        listen 8112;

        # Limit number of concurrent connections note: "local_conn_limit" is just the name I used for the 
        # label of this rate limiter it is a moniker it has no meaning in terms of rate limiting.  
        limit_conn local_conn_limit 1;

        # Allow connections to be made no more frequently than 100ms
        limit_req zone=local_req_limit burst=500 delay=8;
        queue 100 timeout=70;
        location / {
            proxy_pass http://host.docker.internal:9112; # If you are not running this in docker,against your local host, this will need to change. 
        }
    }
}

